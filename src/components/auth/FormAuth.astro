---
interface Props {
  title: string;
  isRegister?: boolean;
  textButton: string;
}

const { title, textButton, isRegister = false } = Astro.props;
const email = Astro.cookies.get('email')?.value ?? ''
const remember = !!email
console.log(remember)
---

<section
  class="bg-base-100 bg-opacity-20 shadow-2xl p-5 rounded-3xl h-[500px] flex flex-col justify-around border border-black"
>
  <h1 class="font-bold text-center text-3xl text-black">
    {title}
  </h1>
  <form class="flex flex-col gap-4" action="">
    {
      isRegister ? (
        <label class="input input-bordered flex items-center gap-2">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            fill="currentColor"
            class="h-4 w-4 opacity-70"
          >
            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6ZM12.735 14c.618 0 1.093-.561.872-1.139a6.002 6.002 0 0 0-11.215 0c-.22.578.254 1.139.872 1.139h9.47Z" />
          </svg>
          <input type="text" class="grow" placeholder="Nombre" name="name" />
        </label>
      ) : null
    }

    <label class="input input-bordered flex items-center gap-2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 16 16"
        fill="currentColor"
        class="h-4 w-4 opacity-70"
      >
        <path
          d="M2.5 3A1.5 1.5 0 0 0 1 4.5v.793c.026.009.051.02.076.032L7.674 8.51c.206.1.446.1.652 0l6.598-3.185A.755.755 0 0 1 15 5.293V4.5A1.5 1.5 0 0 0 13.5 3h-11Z"
        ></path>
        <path
          d="M15 6.954 8.978 9.86a2.25 2.25 0 0 1-1.956 0L1 6.954V11.5A1.5 1.5 0 0 0 2.5 13h11a1.5 1.5 0 0 0 1.5-1.5V6.954Z"
        ></path>
      </svg>
      <input type="text" class="grow" placeholder="Email" name="email" value={email}>
    </label>
    <label class="input input-bordered flex items-center gap-2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 16 16"
        fill="currentColor"
        class="h-4 w-4 opacity-70"
      >
        <path
          fill-rule="evenodd"
          d="M14 6a4 4 0 0 1-4.899 3.899l-1.955 1.955a.5.5 0 0 1-.353.146H5v1.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-2.293a.5.5 0 0 1 .146-.353l3.955-3.955A4 4 0 1 1 14 6Zm-4-2a.75.75 0 0 0 0 1.5.5.5 0 0 1 .5.5.75.75 0 0 0 1.5 0 2 2 0 0 0-2-2Z"
          clip-rule="evenodd"></path>
      </svg>
      <input type="password" class="grow" value="contraseña" name="password" >
    </label>
    <!-- Remember Me Checkbox -->
    <div class="mb-4 flex items-center">
      <input
        type="checkbox"
        checked={remember}
        id="remember_me"
        name="remember_me"
        class="text-blue-500"
      />
      <label for="remember" class="text-gray-600 ml-2 font-ex">Recuerdame</label
      >
    </div>
    <div class="flex flex-col gap-2 w-3/4 md:w-1/2 mx-auto text-center">
      <button type="submit" id="btn-sumbit" class="btn btn-primary w-full disabled:bg-gray-300"
        >{textButton}</button
      >
      {
        isRegister ? (
          <a href="/login" class="link link-secondary">
            ¿Tenes cuenta? Ingresa aqui
          </a>
        ) : (
          <a href="/register" class="link link-secondary">
            ¿No tenés cuenta? registrate aqui
          </a>
        )
      }
    </div>
  </form>
</section>

<script>
import { actions } from "astro:actions";

  const form = document.querySelector("form") as HTMLFormElement;
  const buttonSumbit = document.querySelector("#btn-submit") as HTMLButtonElement;

  form.addEventListener('submit',async(e) => {
    e.preventDefault()
    buttonSumbit?.setAttribute('disabled', 'disabled')


    const formData= new FormData(form)
    
    const {data, error} = await actions.registerUser.safe(formData)
    
    if(error) {
      console.log(error)
    }
    console.log(data)
    buttonSumbit.removeAttribute('disabled')
    form.reset();
    console.log('submit')
  })
</script>
